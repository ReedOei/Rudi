-------------------------
-- Basic combinators
-------------------------
-- Identity
I x -> x

N x y -> y

-- Mockingbird
M x -> x x

T x y -> y x

U x y -> y (x x y)

W x y -> x y y
B x y z -> x (y z)

P a b -> a (a (a b))

C x y z -> x z y

-------------------------
-- Booleans
-------------------------

True x y -> x
False x y -> y
If -> I

Not x -> If x False True

And x y -> If x y False
Or x y -> If x True y


-------------------------
-- Pairs
-------------------------

Pair x y z -> z x y

Left p -> p K
Right p -> p N

-------------------------
-- Numbers
-------------------------

Zero -> N
Next n x y -> x (n x y)

Plus m n -> m Next n
Times m n -> m (Plus n) Zero
Power m n -> n (Times m) (Next Zero)

-- In the article, called the "Zero Predicate"
IsZero n -> n (K False) True

PN p -> (IsZero (Right p)) (Pair Zero (Next Zero)) (Pair (Next (Left p)) (Next (Right p)))
Prev n -> Left (n PN (Pair Zero Zero))

Minus m n -> n Prev m

LessEq m n -> IsZero (Minus m n)
MoreEq m n -> LessEq n m
Less m n -> Not (MoreEq m n)
More m n -> Not (LessEq m n)

Equal m n -> And (LessEq m n) (MoreEq m n)

-------------------------
-- Y-Combinator
-------------------------

Y -> U U

Fun n -> If (IsZero n) Zero (Fun (Prev n))

Loop -> Loop

